<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UIcontrol"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:controlzex="urn:controlzex" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" x:Name="prediction"
        x:Class="UIcontrol.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="575" Width="1000" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="43*"/>
                                    <ColumnDefinition Width="Auto" MinWidth="50"/>
                                    <ColumnDefinition Width="6*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="Auto" Margin="0,0,0,20" Placement="Top" Grid.Row="0" Visibility="Collapsed" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="Auto" Margin="0,2,0,-6" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" Grid.ColumnSpan="3"/>
                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"  Grid.Row="2" Visibility="Hidden" Grid.Column="1" Margin="7,0,43,0"/>
                                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Grid.Row="1" Grid.ColumnSpan="2" >
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange" RadiusX="4" RadiusY="8" Fill="LightGray" Height="7" Canvas.Top="8" Width="{TemplateBinding ActualWidth}" RenderTransformOrigin="0,0.5"/>
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge" Click="IncreaseRepeatButton_Click" Height="26" VerticalAlignment="Bottom" Margin="-12,0,0,0">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange"  HorizontalAlignment="Center"
               VerticalAlignment="Center"  Fill="LightGray" RadiusX="4" RadiusY="4" Height="7" Width="{TemplateBinding ActualWidth}" Canvas.Top="10"/>
                                                                </Canvas>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Fill" TargetName="PART_SelectionRange" Value="#AEAEAE"/>

                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="24" Background="White" OverridesDefaultStyle="True"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="14">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Grid HorizontalAlignment="Left" UseLayoutRounding="True" VerticalAlignment="Center">
                                                        <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="22" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="22"/>
                                                        <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="14" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="14">
                                                            <Ellipse.RenderTransform>
                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                            </Ellipse.RenderTransform>
                                                        </Ellipse>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="grip" Value="#AEAEAE"/>
                                                            <Setter Property="Stroke" TargetName="grip" Value="#AEAEAE"/>

                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <Rectangle x:Name="PART_SelectionRange" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"  Visibility="Visible"/>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="24" Canvas.Left="8" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="24" Canvas.Left="8" Width="24"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" Height="14" OverridesDefaultStyle="True" VerticalAlignment="Top" Width="14">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                                <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border" BorderBrush="#FFF7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="20">
                                        <Border.Effect>
                                            <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <Converters:ShadowConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Effect>
                                    </Border>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                    </ProgressBar>
                                </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border"  BorderBrush="#7B9EAE" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="20">
                                        <Border.Effect>
                                            <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <Converters:ShadowConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Effect>
                                    </Border>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                    </ProgressBar>
                                </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0,1,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="Auto" Margin="18,0,-39,-6">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="0" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="23.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="85" Width="65" >

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="31*"/>
                                    <RowDefinition Height="48*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" MinWidth="54"/>

                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="Track" Fill="#AFAFAF" HorizontalAlignment="Left" Height="28" Margin="-14,30,0,27" Opacity="100" RadiusY="7.5" RadiusX="7.5" Stroke="#7B9EAE" VerticalAlignment="Center" Width="39" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                <Grid x:Name="ThumbHolder" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="0,29,0,26" Height="30" Width="4" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="16"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>

                                    <Ellipse x:Name="RippleThumb" Fill="White" HorizontalAlignment="Right" Height="93" IsHitTestVisible="False" Margin="-42,-32,0,-35" Opacity="0.25" RenderTransformOrigin="0.141,-1.568" VerticalAlignment="Center" Width="46" Grid.Row="0" Grid.RowSpan="2">

                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}" Grid.RowSpan="2">
                                        <Ellipse x:Name="Thumb" Effect="{DynamicResource MaterialDesignShadowDepth1}" Fill="#AFAFAF" HorizontalAlignment="Stretch" Height="52" Margin="-31,-12,10,-14" RenderTransformOrigin="3.029,2.829" Stroke="{x:Null}" VerticalAlignment="Bottom"/>
                                    </AdornerDecorator>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="Thumb" Value="white"/>
                                <Setter Property="Fill" TargetName="Track" Value="white"/>
                                <Setter Property="Visibility" TargetName="RippleThumb" Value="Hidden"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Thumb" Value="#FFBDBDBD"/>
                                <Setter Property="Fill" TargetName="Track">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.12"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0,1,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="34">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="23.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Track" Fill="Black" HorizontalAlignment="Left" Height="15" Margin="4.211,5,4.211,0" Opacity="0.26" RadiusY="7.5" RadiusX="7.5" Stroke="{x:Null}" VerticalAlignment="Top" Width="40"/>
                                <Grid x:Name="ThumbHolder" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>
                                    <Ellipse x:Name="RippleThumb" Fill="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" Height="25" IsHitTestVisible="False" Margin="0" Opacity="0.26" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="25">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="Thumb" Effect="{DynamicResource MaterialDesignShadowDepth1}" Fill="#FFFAFAFA" HorizontalAlignment="Center" Height="25" Margin="0" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}" VerticalAlignment="Center" Width="25"/>
                                    </AdornerDecorator>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" FlowDirection="LeftToRight" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="Thumb" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Fill" TargetName="Track" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Content" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContent), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="ContentTemplate" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Thumb" Value="#FFBDBDBD"/>
                                <Setter Property="Fill" TargetName="Track">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.12"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            
        </Style>
    </Window.Resources>
    <Grid Margin="0,0,2,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="787*"/>
        </Grid.ColumnDefinitions>
        <Controls:Flyout x:Name="flyoutDePrediction" Background="#FF7B9EAE" Foreground="#FFFBF5F5" FontFamily="Trebuchet MS" FontSize="48"   Controls:ControlsHelper.HeaderMargin="10,25,10,10" Controls:ControlsHelper.HeaderFontFamily="Trebuchet MS" Controls:ControlsHelper.HeaderFontSize="35" Controls:ControlsHelper.HeaderFontWeight="Light"  CloseButtonVisibility="Collapsed" Margin="0,0,627,0" UseLayoutRounding="False" Padding="80" Grid.ColumnSpan="2">
            <Canvas x:Name="canvas1" Height="484" RenderTransformOrigin="0.5,0.5" Margin="-1,0,0,0" HorizontalAlignment="Left" Width="356" >
                <TextBlock Width="188" Foreground="White" Canvas.Left="88" Height="22" TextAlignment="Center" Text="_______________________________________" FontSize="11" />
                <ComboBox Name="comboboxWilaya" Canvas.Left="104" Canvas.Top="37" Width="166" Height="25" RenderTransformOrigin="0.497,0.486" Background="White" FontSize="12" BorderBrush="#7B9EAE" Foreground="Black" SelectionChanged="ComboBox_SelectionChanged" Controls:TextBoxHelper.WatermarkTrimming="WordEllipsis" controlzex:KeyboardNavigationEx.AlwaysShowFocusVisual="True" IsManipulationEnabled="True" Cursor="Arrow"  >
                    <ComboBoxItem Content="  01-Adrar"  />
                    <ComboBoxItem Content="  02-Chlef"  />
                    <ComboBoxItem Content="  03-Laghouat"  />
                    <ComboBoxItem Content="  04-Oum El Bouaghi"  />
                    <ComboBoxItem Content="  05-Batna"  />
                    <ComboBoxItem Content="  06-Bejaia"  />
                    <ComboBoxItem Content="  07-Biskra"  />
                    <ComboBoxItem Content="  08-Bechar"  />
                    <ComboBoxItem Content="  09-Blida"  />
                    <ComboBoxItem Content="  10-Bouira"  />
                    <ComboBoxItem Content="  11-Tamanrasset"  />
                    <ComboBoxItem Content="  12-Tebessa"  />
                    <ComboBoxItem Content="  13-Tlemcen"  />
                    <ComboBoxItem Content="  14-Tiaret"  />
                    <ComboBoxItem Content="  15-Tizi Ouzou"  />
                    <ComboBoxItem Content="  16-Alger"  />
                    <ComboBoxItem Content="  17-Djelfa"  />
                    <ComboBoxItem Content="  18-Jijel"  />
                    <ComboBoxItem Content="  19-Setif"  />
                    <ComboBoxItem Content="  20-Saida"  />
                    <ComboBoxItem Content="  21-Skikda"  />
                    <ComboBoxItem Content="  22-Sidi Bel Abbes"  />
                    <ComboBoxItem Content="  23-Annaba"  />
                    <ComboBoxItem Content="  24-Guelma"  />
                    <ComboBoxItem Content="  25-Constantine"  />
                    <ComboBoxItem Content="  26-Medea"  />
                    <ComboBoxItem Content="  27-Mostaganem"  />
                    <ComboBoxItem Content="  28-M'sila"  />
                    <ComboBoxItem Content="  29-Mascara"  />
                    <ComboBoxItem Content="  30-Ouargla"  />
                    <ComboBoxItem Content="  31-Oran"  />
                    <ComboBoxItem Content="  32-El Baydh"  />
                    <ComboBoxItem Content="  33-Illizi"  />
                    <ComboBoxItem Content="  34-Bordj Bou Arreridj"  />
                    <ComboBoxItem Content="  35-Boumerdes"  />
                    <ComboBoxItem Content="  36-El Taref"  />
                    <ComboBoxItem Content="  37-Tindouf"  />
                    <ComboBoxItem Content="  38-Tissemsilt"  />
                    <ComboBoxItem Content="  39-El Oued"  />
                    <ComboBoxItem Content="  40-Khenchela"  />
                    <ComboBoxItem Content="  41-Souk Ahras"  />
                    <ComboBoxItem Content="  42-Tipaza"  />
                    <ComboBoxItem Content="  43-Mila"  />
                    <ComboBoxItem Content="  44-Ain Defla"  />
                    <ComboBoxItem Content="  45-Naama"  />
                    <ComboBoxItem Content="  46-Ain Temouchent"  />
                    <ComboBoxItem Content="  47-Ghardaia"  />
                    <ComboBoxItem Content="  48-Relizane"  />
                </ComboBox>
                <TextBlock TextAlignment="Center" Text="Météo Du Jour" FontSize="16" Canvas.Left="30" Canvas.Top="94"/>
                <TextBlock TextAlignment="Center" Text="Wilaya" FontSize="16" RenderTransformOrigin="0.875,2.545" Canvas.Left="30" Canvas.Top="40" Height="22" />
                <TextBlock Canvas.Left="60" Canvas.Top="143" Width="48" TextAlignment="Left" Text="Temp" FontSize="12" Height="14" />
                <TextBlock Canvas.Left="60" Canvas.Top="183" Width="48" TextAlignment="Left" Text="Vent" Height="14" FontSize="12" />
                <TextBlock Canvas.Left="60" Canvas.Top="223" Width="48" Height="14" Text="Precip." TextAlignment="Left" RenderTransformOrigin="0.5,0.5" FontSize="12" />
                <TextBlock Canvas.Left="60" Canvas.Top="263" Width="48" Height="14" Text="Nuage" TextAlignment="Left" RenderTransformOrigin="0.5,0.5" FontSize="12" />
                <TextBlock Canvas.Left="60" Canvas.Top="303" Width="48" Height="14" Text="Humid" TextAlignment="Left" RenderTransformOrigin="0.5,0.5" FontSize="12" />
                <TextBlock Width="48" RenderTransformOrigin="0.632,0.402" Text="Délai" TextAlignment="Center" Height="19" Canvas.Top="375" Canvas.Left="30" FontSize="16" />
                <Button Name="buttonLireDunFichier" Content="Lire d'un fichier"  Height="33" Width="188" Canvas.Left="90" Canvas.Top="337" Foreground="#FF7B9EAE" FontSize="12" Style="{DynamicResource ButtonStyle2}" BorderBrush="#FF7B9EAE" Background="White" Click="ButtonLireDunFichier_Click"  />
                <Button Name="buttonValider" Content="Valider"  Canvas.Left="52"  Canvas.Top="435" Width="263" Height="38" FontSize="16" Style="{DynamicResource ButtonStyle1}" Click="Button_Click_3" BorderBrush="#FF7B9EAE">
                    <Button.Background >
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="#FFF3F3F3" Offset="0"/>
                            <GradientStop Color="#FFF3EF04" Offset="0.004"/>
                            <GradientStop Color="#FFFFFF0D" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Slider  Name="sliderTemp" Canvas.Left="115" Canvas.Top="140" Width="79" BorderBrush="White" Foreground="White" Style="{DynamicResource SliderStyle1}" Height="30" Maximum="50" Minimum="-10" Controls:SliderHelper.ThumbFillBrush="#FF631F1F" Value="-10" ValueChanged="SliderTemp_ValueChanged" SmallChange="1" />
                <Slider  Name="sliderNuage" Canvas.Left="115" Canvas.Top="258" Width="79" BorderBrush="White" Foreground="White" Style="{DynamicResource SliderStyle1}" Height="35" Maximum="100" Value="-10" SmallChange="1" />
                <Slider  Name="sliderHumid" Canvas.Left="115" Canvas.Top="298" Width="79" BorderBrush="White" Foreground="White" Style="{DynamicResource SliderStyle1}" Height="34" Maximum="100" Value="-10" SmallChange="1" />
                <Slider  Name="sliderVent" Canvas.Left="115" Canvas.Top="178" Width="79" BorderBrush="White" Foreground="White" Style="{DynamicResource SliderStyle1}" Height="35" Maximum="20" Value="-10" SmallChange="1" />
                <Slider  Name="sliderDelai" Canvas.Left="32" Canvas.Top="395" Width="297" BorderBrush="#FFE8ECF1" Foreground="#FFE8ECF1" Style="{DynamicResource SliderStyle1}" Height="35" Minimum="1" Maximum="7" SmallChange="0" TickPlacement="TopLeft" />
                <Slider  Name="sliderPrecip" Canvas.Left="115" Canvas.Top="220" Width="79" BorderBrush="White" Foreground="White" Style="{DynamicResource SliderStyle1}" Height="24" Maximum="100" Value="-10" SmallChange="1" />
                <TextBlock Text="{Binding Value, ElementName=sliderTemp}" Name="textblockTemp" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="200" Canvas.Top="143" Height="19" FontSize="16" FontWeight="Bold" >

                </TextBlock>
                <TextBlock Text="{Binding Value, ElementName=sliderVent}" Name="textblockVent" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="200" Canvas.Top="183" Height="19" FontSize="16" FontWeight="Bold" />
                <TextBlock Text="{Binding Value, ElementName=sliderPrecip}" Name="textblockPrecip" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="200" Canvas.Top="223" Height="19" FontSize="16" FontWeight="Bold" >

                </TextBlock>
                <TextBlock Text="{Binding Value, ElementName=sliderNuage}" Name="textblockNuage" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="200" Canvas.Top="263" Height="19" FontSize="16" FontWeight="Bold" >

                </TextBlock>
                <TextBlock Text="{Binding Value, ElementName=sliderHumid}" Name="textblockHumid" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="200" Canvas.Top="303" Height="19" FontSize="16" FontWeight="Bold" >

                </TextBlock>
                <TextBlock Text="{Binding Value, ElementName=sliderDelai}" Name="textblockDelai" Width="43" RenderTransformOrigin="7.72,2.348" Canvas.Left="316" Canvas.Top="399" Height="19" FontSize="16" FontWeight="Bold" >

                </TextBlock>
                <ToggleButton x:Name="switchTemp" Height="44" Canvas.Left="260" Canvas.Top="128" Width="82" BorderBrush="White" Foreground="#FFFFFDFD" Background="White" Checked="Switch1_Checked" RenderTransformOrigin="1.403,0.455" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}" Unchecked="SwitchTemp_Unchecked">

                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="0.5" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="0.99"/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <ToggleButton x:Name="switchVent" Height="44" Canvas.Left="260" Canvas.Top="168" Width="82" BorderBrush="White" Foreground="#FFFFFDFD" Background="White" Checked="switchVent_Checked" RenderTransformOrigin="1.403,0.455" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}" Unchecked="SwitchVent_Unchecked">

                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="0.5" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="0.99"/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <ToggleButton x:Name="switchPrecip" Height="44" Canvas.Left="260" Canvas.Top="209" Width="82" BorderBrush="White" Foreground="#FFFFFDFD" Background="White" Checked="switchPrecip_Checked" RenderTransformOrigin="1.403,0.455" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}" Unchecked="SwitchPrecip_Unchecked">
                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="0.5" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="0.99"/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <ToggleButton x:Name="switchNuage" Height="44" Canvas.Left="260" Canvas.Top="250" Width="82" BorderBrush="White" Foreground="#FFFFFDFD" Background="White" Checked="switchNuage_Checked" RenderTransformOrigin="1.403,0.455" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}" Unchecked="SwitchNuage_Unchecked">
                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="0.5" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="0.99"/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <ToggleButton x:Name="switchHumid" Height="44" Canvas.Left="260" Canvas.Top="287" Width="82" BorderBrush="White" Foreground="#FFFFFDFD" Background="White" Checked="switchHumid_Checked" RenderTransformOrigin="1.403,0.455" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}" Unchecked="SwitchHumid_Unchecked">

                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="0.5" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="0.99"/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  Stretch="Uniform" Canvas.Left="38" Canvas.Top="135" Width="32" RenderTransformOrigin="7.01,0.398">
                    <Canvas  x:Name="Layer_1" Width="62" Height="64" Canvas.Left="0" Canvas.Top="0">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </Canvas.RenderTransform>
                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path1" Fill="White" Height="54" Stretch="Fill" Canvas.Left="-13" Width="21.637">
                            <Path.Data>
                                <PathGeometry Figures="m 30.999 49.997 c -4.418 0 -7.998 -3.58 -7.998 -7.998 0 -2.025 0.758 -3.869 2 -5.279 V 20.002 c 0 -3.313 2.686 -5.999 5.998 -5.999 3.314 0 6 2.686 6 5.999 V 36.72 c 1.24 1.41 2 3.254 2 5.279 0 4.418 -3.582 7.998 -8 7.998 z m 2 -11.443 v -4.293 -10.26 -3.999 c 0 -1.104 -0.895 -2 -2 -2 -1.104 0 -2 0.896 -2 2 v 3.999 10.26 4.293 c -1.189 0.693 -1.998 1.969 -1.998 3.445 0 2.209 1.789 3.998 3.998 3.998 2.209 0 4 -1.789 4 -3.998 0 -1.476 -0.809 -2.752 -2 -3.445 z m -2 6.445 c -1.656 0 -2.998 -1.344 -2.998 -3 0 -1.305 0.836 -2.402 1.998 -2.816 v -5.184 h 2 v 5.184 c 1.162 0.414 2 1.512 2 2.816 0 1.656 -1.344 3 -3 3 z" FillRule="EvenOdd"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Viewbox>
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Canvas.Left="46" Canvas.Top="183" Width="32">
                    <Canvas x:Name="Layer_2" Width="62" Height="64" Canvas.Left="0" Canvas.Top="0">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </Canvas.RenderTransform>

                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Height="39.455" Width="53" x:Name="path2" Fill="White" Stretch="Fill" Canvas.Left="-41" RenderTransformOrigin="0.155,0.646">
                            <Path.Data>
                                <PathGeometry Figures="M65.999 52L65.999 52h-3c-1.105 0-2-0.895-2-1.999s0.895-2 2-2h3  c1.104 0 2-0.896 2-1.999c0-1.105-0.896-2-2-2c-1.105 0-2-0.896-2-2s0.895-2 2-2c0.137 0 0.271 0.014 0.402 0.041  c3.121 0.211 5.596 2.783 5.596 5.959C71.997 49.314 69.312 52 65.999 52z M55.999 48.001h-2h-6.998H34.002  c-1.104 0-1.999 0.896-1.999 2S32.898 52 34.002 52h2h3.999h3h4h3h3.998h2c3.314 0 6 2.687 6 6c0 3.176-2.475 5.748-5.596 5.959  C56.272 63.986 56.138 64 55.999 64c-1.104 0-2-0.896-2-2c0-1.105 0.896-2 2-2c1.105 0 2-0.896 2-2s-0.895-2-2-2h-2h-3.998h-3h-4h-3  h-3.999h-2c-3.313 0-5.999-2.686-5.999-5.999c0-3.175 2.475-5.747 5.596-5.959c0.131-0.026 0.266-0.04 0.403-0.04l0 0h12.999h6.998  h2c1.105 0 2-0.896 2-2s-0.895-2-2-2c-1.104 0-2-0.895-2-2c0-1.104 0.896-2 2-2c0.139 0 0.273 0.015 0.404 0.041  c3.121 0.211 5.596 2.783 5.596 5.959C61.999 45.314 59.313 48.001 55.999 48.001z" FillRule="EvenOdd"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Viewbox>
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Height="21" Width="34" Canvas.Left="21" Canvas.Top="223" RenderTransformOrigin="0.044,1.357">
                    <Canvas x:Name="Layer_3" Width="40" Height="31" Canvas.Left="0" Canvas.Top="0">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </Canvas.RenderTransform>
                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3" Fill="White" Stretch="Fill" Width="36" Height="27.5" Canvas.Top="0.25">
                            <Path.Data>
                                <PathGeometry Figures="M63.999 64.941v-4.381c2.389-1.383 3.999-3.961 3.999-6.92  c0-4.417-3.581-7.999-7.998-7.999c-1.601 0-3.084 0.48-4.334 1.291c-1.231-5.317-5.974-9.29-11.665-9.29  c-6.626 0-11.998 5.372-11.998 11.998c0 3.55 1.55 6.728 3.999 8.925v4.916c-4.776-2.768-7.998-7.922-7.998-13.841  c0-8.835 7.162-15.997 15.997-15.997c6.004 0 11.229 3.311 13.966 8.203c0.663-0.113 1.336-0.205 2.033-0.205  c6.626 0 11.998 5.372 11.998 11.999C71.998 58.863 68.656 63.293 63.999 64.941z M42.002 65.639c-1.104 0-1-0.895-1-1.998v-8  c0-1.104-0.104-2 1-2s1 0.896 1 2v8C43.002 64.744 43.106 65.639 42.002 65.639z M42.002 69.639c1.104 0 1.999 0.896 1.999 2  c0 1.105-0.895 2-1.999 2s-2-0.895-2-2C40.002 70.535 40.897 69.639 42.002 69.639z M50.001 69.639c-1.104 0-1-0.895-1-2v-7.998  c0-1.105-0.104-2 1-2s1 0.895 1 2v7.998C51.001 68.744 51.105 69.639 50.001 69.639z M50.001 73.639c1.104 0 1.999 0.895 1.999 2  c0 1.104-0.895 2-1.999 2s-2-0.896-2-2C48.001 74.533 48.896 73.639 50.001 73.639z M58 65.639c-1.104 0-1-0.895-1-1.998v-8  c0-1.104-0.104-2 1-2s1 0.896 1 2v8C59 64.744 59.104 65.639 58 65.639z M58 69.639c1.104 0 2 0.896 2 2c0 1.105-0.896 2-2 2  s-2-0.895-2-2C56 70.535 56.896 69.639 58 69.639z" FillRule="EvenOdd"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Viewbox>
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Height="28" Width="55" Canvas.Left="14" Canvas.Top="249">
                    <Canvas x:Name="Layer_4" Width="100" Height="100" Canvas.Left="0" Canvas.Top="0">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </Canvas.RenderTransform>
                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path4" Fill="White" Height="77.5" Stretch="Fill" Width="112.857" Canvas.Top="30" Canvas.Left="-22.857">
                            <Path.Data>
                                <PathGeometry Figures="M69.998 65.641H30.003c-1.104 0-2-0.896-2-2c0-1.105 0.896-2 2-2h39.995  c1.104 0 2 0.895 2 2C71.998 64.744 71.103 65.641 69.998 65.641z M69.998 57.641H30.003c-1.104 0-2-0.895-2-2c0-1.104 0.896-2 2-2  h39.995c1.104 0 2 0.896 2 2C71.998 56.746 71.103 57.641 69.998 57.641z M59.999 45.643c-1.601 0-3.083 0.48-4.333 1.291  c-1.232-5.317-5.974-9.291-11.665-9.291c-6.626 0-11.998 5.373-11.998 12h-4c0-8.835 7.163-15.999 15.998-15.999  c6.004 0 11.229 3.312 13.965 8.204c0.664-0.113 1.337-0.205 2.033-0.205c5.222 0 9.652 3.342 11.301 8h-4.381  C65.535 47.253 62.958 45.643 59.999 45.643z M30.003 69.639h39.995c1.104 0 2 0.896 2 2c0 1.105-0.896 2-2 2H30.003  c-1.104 0-2-0.895-2-2C28.003 70.535 28.898 69.639 30.003 69.639z" FillRule="EvenOdd"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Viewbox>
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Prediction" VerticalAlignment="Top" RenderTransformOrigin="1.27,-1.062" Canvas.Left="110" Canvas.Top="-33" Width="148" FontSize="20" Height="28" TextAlignment="Center" />
                <TextBlock Name="Celsius" Width="30" Text="°C" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="250" Canvas.Top="143" Height="19" FontSize="16" FontWeight="Bold" Foreground="White" Style="{DynamicResource TextBlockStyle1}"/>
                <TextBlock Width="30" Text="m/s" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="250" Canvas.Top="183" Height="19" FontSize="16" FontWeight="Bold"/>
                <TextBlock Width="30" Text="mm" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="250" Canvas.Top="223" Height="19" FontSize="16" FontWeight="Bold"/>
                <TextBlock Width="30" Text="%" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="250" Canvas.Top="263" Height="19" FontSize="16" FontWeight="Bold"/>
                <TextBlock Width="30" Text="%" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="250" Canvas.Top="303" Height="19" FontSize="16" FontWeight="Bold"/>
                <TextBlock Width="30" Text="j" TextAlignment="Center" RenderTransformOrigin="5.383,2.054" Canvas.Left="326" Canvas.Top="399" Height="19" FontSize="16" FontWeight="Bold"/>
            </Canvas>
        </Controls:Flyout>
        <Button Content="Button" HorizontalAlignment="Left" Margin="554.5,249,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click_2" Grid.Column="1"/>
    </Grid>
</Window>
    
